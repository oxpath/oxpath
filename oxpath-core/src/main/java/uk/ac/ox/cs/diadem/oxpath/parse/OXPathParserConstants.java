/* Generated By:JJTree&JavaCC: Do not edit this line. OXPathParserConstants.java */
package uk.ac.ox.cs.diadem.oxpath.parse;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface OXPathParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int APOSTROPHE_URL = 1;
  /** RegularExpression Id. */
  int QUOTE_URL = 2;
  /** RegularExpression Id. */
  int SPACE = 3;
  /** RegularExpression Id. */
  int TAB = 4;
  /** RegularExpression Id. */
  int NEWLINE = 5;
  /** RegularExpression Id. */
  int PROTOCOL = 6;
  /** RegularExpression Id. */
  int FOCUS = 7;
  /** RegularExpression Id. */
  int CLICK = 8;
  /** RegularExpression Id. */
  int NEXTCLICK = 9;
  /** RegularExpression Id. */
  int PRESSENTER = 10;
  /** RegularExpression Id. */
  int CLICKWITHCHANGE = 11;
  /** RegularExpression Id. */
  int MOVETOFRAME = 12;
  /** RegularExpression Id. */
  int ENTERFRAME = 13;
  /** RegularExpression Id. */
  int MOVETOHREF = 14;
  /** RegularExpression Id. */
  int DBLCLICK = 15;
  /** RegularExpression Id. */
  int MOUSEDOWN = 16;
  /** RegularExpression Id. */
  int MOUSEENTER = 17;
  /** RegularExpression Id. */
  int MOUSEMOVE = 18;
  /** RegularExpression Id. */
  int MOUSEOVER = 19;
  /** RegularExpression Id. */
  int MOUSEOUT = 20;
  /** RegularExpression Id. */
  int MOUSEUP = 21;
  /** RegularExpression Id. */
  int WHEEL = 22;
  /** RegularExpression Id. */
  int SUBMIT = 23;
  /** RegularExpression Id. */
  int CHECK = 24;
  /** RegularExpression Id. */
  int UNCHECK = 25;
  /** RegularExpression Id. */
  int VARIABLE = 26;
  /** RegularExpression Id. */
  int END_URL_IN_PATH = 27;
  /** RegularExpression Id. */
  int END_URL = 28;
  /** RegularExpression Id. */
  int SLASH_URL = 29;
  /** RegularExpression Id. */
  int QUESTION_URL = 30;
  /** RegularExpression Id. */
  int MINUS_URL = 31;
  /** RegularExpression Id. */
  int UNDERSCORE_URL = 32;
  /** RegularExpression Id. */
  int PERIOD_URL = 33;
  /** RegularExpression Id. */
  int AMPERSAND_URL = 34;
  /** RegularExpression Id. */
  int EQUALS_URL = 35;
  /** RegularExpression Id. */
  int DOLLAR_URL = 36;
  /** RegularExpression Id. */
  int PERCENT_URL = 37;
  /** RegularExpression Id. */
  int AT_URL = 38;
  /** RegularExpression Id. */
  int PLUS_URL = 39;
  /** RegularExpression Id. */
  int EXCLAIMATION_URL = 40;
  /** RegularExpression Id. */
  int STAR_URL = 41;
  /** RegularExpression Id. */
  int OPEN_PARAN_URL = 42;
  /** RegularExpression Id. */
  int CLOSE_PARAN_URL = 43;
  /** RegularExpression Id. */
  int COMMA_URL = 44;
  /** RegularExpression Id. */
  int LOWER_ALPHA = 45;
  /** RegularExpression Id. */
  int UPPER_ALPHA = 46;
  /** RegularExpression Id. */
  int DIGIT = 47;
  /** RegularExpression Id. */
  int ENDLINE = 48;
  /** RegularExpression Id. */
  int EQUALS_DEFAULT = 49;
  /** RegularExpression Id. */
  int DOC_BEGIN = 50;
  /** RegularExpression Id. */
  int OPEN_PARAN = 51;
  /** RegularExpression Id. */
  int CLOSE_PARAN = 52;
  /** RegularExpression Id. */
  int OPEN_OPTIONAL = 53;
  /** RegularExpression Id. */
  int OPEN_BRACKET = 54;
  /** RegularExpression Id. */
  int CLOSE_BRACKET = 55;
  /** RegularExpression Id. */
  int BEGIN_URL_IN_PATH = 56;
  /** RegularExpression Id. */
  int OPEN_CURLY = 57;
  /** RegularExpression Id. */
  int CLOSE_CURLY = 58;
  /** RegularExpression Id. */
  int COMMA = 59;
  /** RegularExpression Id. */
  int NUMBER = 60;
  /** RegularExpression Id. */
  int DESCENDENT_OR_SELF_SHORT = 61;
  /** RegularExpression Id. */
  int BEGIN_USER_ACTION = 62;
  /** RegularExpression Id. */
  int BEGIN_KLEENE_STAR = 63;
  /** RegularExpression Id. */
  int BEGIN_BOUNDED_KLEENE_STAR_PRED = 64;
  /** RegularExpression Id. */
  int SLASH = 65;
  /** RegularExpression Id. */
  int BEGIN_EXTRACT_MARK = 66;
  /** RegularExpression Id. */
  int STYLE = 67;
  /** RegularExpression Id. */
  int ATTRIBUTE = 68;
  /** RegularExpression Id. */
  int CHILD = 69;
  /** RegularExpression Id. */
  int DESCENDANTORSELF = 70;
  /** RegularExpression Id. */
  int DESCENDANT = 71;
  /** RegularExpression Id. */
  int FOLLOWINGSIBLING = 72;
  /** RegularExpression Id. */
  int FOLLOWING = 73;
  /** RegularExpression Id. */
  int NAMESPACE = 74;
  /** RegularExpression Id. */
  int SELF = 75;
  /** RegularExpression Id. */
  int ANCESTORORSELF = 76;
  /** RegularExpression Id. */
  int ANCESTOR = 77;
  /** RegularExpression Id. */
  int PARENT = 78;
  /** RegularExpression Id. */
  int PRECEDINGSIBLING = 79;
  /** RegularExpression Id. */
  int PRECEDING = 80;
  /** RegularExpression Id. */
  int AXIS = 81;
  /** RegularExpression Id. */
  int COMMENT = 82;
  /** RegularExpression Id. */
  int TEXT = 83;
  /** RegularExpression Id. */
  int PROCESSING_INSTRUCTION = 84;
  /** RegularExpression Id. */
  int NODE = 85;
  /** RegularExpression Id. */
  int FIELD = 86;
  /** RegularExpression Id. */
  int ANY_FIELD = 87;
  /** RegularExpression Id. */
  int PERIOD = 88;
  /** RegularExpression Id. */
  int PARENT_SHORT = 89;
  /** RegularExpression Id. */
  int AT = 90;
  /** RegularExpression Id. */
  int POSITION = 91;
  /** RegularExpression Id. */
  int LAST = 92;
  /** RegularExpression Id. */
  int COUNT = 93;
  /** RegularExpression Id. */
  int ID = 94;
  /** RegularExpression Id. */
  int NAMESPACEURI = 95;
  /** RegularExpression Id. */
  int LOCALNAME = 96;
  /** RegularExpression Id. */
  int NAME = 97;
  /** RegularExpression Id. */
  int STRING = 98;
  /** RegularExpression Id. */
  int CONCAT = 99;
  /** RegularExpression Id. */
  int STARTSWITH = 100;
  /** RegularExpression Id. */
  int CONTAINSFUNC = 101;
  /** RegularExpression Id. */
  int MINUS_FUNC = 102;
  /** RegularExpression Id. */
  int PLUS_FUNC = 103;
  /** RegularExpression Id. */
  int SUBSTRINGBEFORE = 104;
  /** RegularExpression Id. */
  int SUBSTRINGAFTER = 105;
  /** RegularExpression Id. */
  int SUBSTRING = 106;
  /** RegularExpression Id. */
  int SUBSTRINGLENGTH = 107;
  /** RegularExpression Id. */
  int NORMALIZESPACE = 108;
  /** RegularExpression Id. */
  int TRANSLATE = 109;
  /** RegularExpression Id. */
  int SUBSTRINGBEFOREREVERSE = 110;
  /** RegularExpression Id. */
  int SUBSTRINGAFTERREVERSE = 111;
  /** RegularExpression Id. */
  int SUBSTRINGREVERSE = 112;
  /** RegularExpression Id. */
  int STRINGJOIN = 113;
  /** RegularExpression Id. */
  int REPLACE = 114;
  /** RegularExpression Id. */
  int MATCHES = 115;
  /** RegularExpression Id. */
  int QUALIFYURL = 116;
  /** RegularExpression Id. */
  int ISVISIBLE = 117;
  /** RegularExpression Id. */
  int ISINVISIBLE = 118;
  /** RegularExpression Id. */
  int TOXML = 119;
  /** RegularExpression Id. */
  int DOMPROPERTY = 120;
  /** RegularExpression Id. */
  int SELECTTEXT = 121;
  /** RegularExpression Id. */
  int INNERHTML = 122;
  /** RegularExpression Id. */
  int OUTERHTML = 123;
  /** RegularExpression Id. */
  int CURRENTURL = 124;
  /** RegularExpression Id. */
  int PAGECONTENT = 125;
  /** RegularExpression Id. */
  int SCREENSHOT = 126;
  /** RegularExpression Id. */
  int SAVEPAGE = 127;
  /** RegularExpression Id. */
  int NOW = 128;
  /** RegularExpression Id. */
  int URIFY = 129;
  /** RegularExpression Id. */
  int JAROWRINKLER = 130;
  /** RegularExpression Id. */
  int BOOLEAN = 131;
  /** RegularExpression Id. */
  int NOT = 132;
  /** RegularExpression Id. */
  int TRUE = 133;
  /** RegularExpression Id. */
  int FALSE = 134;
  /** RegularExpression Id. */
  int LANG = 135;
  /** RegularExpression Id. */
  int NUMBERFUNC = 136;
  /** RegularExpression Id. */
  int SUM = 137;
  /** RegularExpression Id. */
  int FLOOR = 138;
  /** RegularExpression Id. */
  int CEILING = 139;
  /** RegularExpression Id. */
  int ROUND = 140;
  /** RegularExpression Id. */
  int END_EXTRACT_MARK = 141;
  /** RegularExpression Id. */
  int NEGATIVE = 142;
  /** RegularExpression Id. */
  int AND = 143;
  /** RegularExpression Id. */
  int OR = 144;
  /** RegularExpression Id. */
  int MOD = 145;
  /** RegularExpression Id. */
  int DIV = 146;
  /** RegularExpression Id. */
  int MULTIPLY = 147;
  /** RegularExpression Id. */
  int UNION = 148;
  /** RegularExpression Id. */
  int PLUS = 149;
  /** RegularExpression Id. */
  int MINUS = 150;
  /** RegularExpression Id. */
  int LESSTE = 151;
  /** RegularExpression Id. */
  int LESS = 152;
  /** RegularExpression Id. */
  int GREATERTE = 153;
  /** RegularExpression Id. */
  int GREATER = 154;
  /** RegularExpression Id. */
  int NOTEQUAL = 155;
  /** RegularExpression Id. */
  int EQUALS = 156;
  /** RegularExpression Id. */
  int PERIOD_OP = 157;
  /** RegularExpression Id. */
  int HASH = 158;
  /** RegularExpression Id. */
  int WORD_TEST = 159;
  /** RegularExpression Id. */
  int CONTAINS = 160;
  /** RegularExpression Id. */
  int WAIT = 161;
  /** RegularExpression Id. */
  int UNTIL = 162;
  /** RegularExpression Id. */
  int NOBACK = 163;
  /** RegularExpression Id. */
  int DOLLAR = 164;
  /** RegularExpression Id. */
  int WILDCARD = 165;
  /** RegularExpression Id. */
  int NCNAME = 166;
  /** RegularExpression Id. */
  int NAMESTARTCHAR = 167;
  /** RegularExpression Id. */
  int COLON = 168;
  /** RegularExpression Id. */
  int DIGITS = 169;
  /** RegularExpression Id. */
  int DOUBLE_QUOTE_STRING_PATH = 171;
  /** RegularExpression Id. */
  int SINGLE_QUOTE_STRING_PATH = 174;

  /** Lexical state. */
  int IN_URL = 0;
  /** Lexical state. */
  int DEFAULT = 1;
  /** Lexical state. */
  int IN_PATH_OP = 2;
  /** Lexical state. */
  int ACTION = 3;
  /** Lexical state. */
  int IN_DOUBLE_QUOTE_STRING_PATH = 4;
  /** Lexical state. */
  int IN_SINGLE_QUOTE_STRING_PATH = 5;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"\\\'\"",
    "\"\\\"\"",
    "\" \"",
    "\"\\t\"",
    "<NEWLINE>",
    "<PROTOCOL>",
    "\"focus\"",
    "\"click\"",
    "\"nextclick\"",
    "\"pressenter\"",
    "\"clkwithchange\"",
    "\"movetoframe\"",
    "\"enterframe\"",
    "\"movetohref\"",
    "\"dblclick\"",
    "\"mousedown\"",
    "\"mouseenter\"",
    "\"mousemove\"",
    "\"mouseover\"",
    "\"mouseout\"",
    "\"mouseup\"",
    "\"wheel\"",
    "\"submit\"",
    "\"check\"",
    "\"uncheck\"",
    "<VARIABLE>",
    "\">\"",
    "\"}\"",
    "\"/\"",
    "\"?\"",
    "\"-\"",
    "\"_\"",
    "\".\"",
    "\"&\"",
    "\"=\"",
    "\"$\"",
    "\"%\"",
    "\"@\"",
    "\"+\"",
    "\"!\"",
    "\"*\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "<LOWER_ALPHA>",
    "<UPPER_ALPHA>",
    "<DIGIT>",
    "\";\"",
    "\"=\"",
    "<DOC_BEGIN>",
    "\"(\"",
    "\")\"",
    "\"[?\"",
    "\"[\"",
    "\"]\"",
    "<BEGIN_URL_IN_PATH>",
    "\"{\"",
    "\"}\"",
    "\",\"",
    "<NUMBER>",
    "<DESCENDENT_OR_SELF_SHORT>",
    "<BEGIN_USER_ACTION>",
    "<BEGIN_KLEENE_STAR>",
    "<BEGIN_BOUNDED_KLEENE_STAR_PRED>",
    "\"/\"",
    "\":<\"",
    "<STYLE>",
    "<ATTRIBUTE>",
    "<CHILD>",
    "<DESCENDANTORSELF>",
    "<DESCENDANT>",
    "<FOLLOWINGSIBLING>",
    "<FOLLOWING>",
    "<NAMESPACE>",
    "<SELF>",
    "<ANCESTORORSELF>",
    "<ANCESTOR>",
    "<PARENT>",
    "<PRECEDINGSIBLING>",
    "<PRECEDING>",
    "\"::\"",
    "<COMMENT>",
    "<TEXT>",
    "<PROCESSING_INSTRUCTION>",
    "<NODE>",
    "<FIELD>",
    "<ANY_FIELD>",
    "\".\"",
    "\"..\"",
    "\"@\"",
    "<POSITION>",
    "<LAST>",
    "<COUNT>",
    "<ID>",
    "<NAMESPACEURI>",
    "<LOCALNAME>",
    "<NAME>",
    "<STRING>",
    "<CONCAT>",
    "<STARTSWITH>",
    "<CONTAINSFUNC>",
    "<MINUS_FUNC>",
    "<PLUS_FUNC>",
    "<SUBSTRINGBEFORE>",
    "<SUBSTRINGAFTER>",
    "<SUBSTRING>",
    "<SUBSTRINGLENGTH>",
    "<NORMALIZESPACE>",
    "<TRANSLATE>",
    "<SUBSTRINGBEFOREREVERSE>",
    "<SUBSTRINGAFTERREVERSE>",
    "<SUBSTRINGREVERSE>",
    "<STRINGJOIN>",
    "<REPLACE>",
    "<MATCHES>",
    "<QUALIFYURL>",
    "<ISVISIBLE>",
    "<ISINVISIBLE>",
    "<TOXML>",
    "<DOMPROPERTY>",
    "<SELECTTEXT>",
    "<INNERHTML>",
    "<OUTERHTML>",
    "<CURRENTURL>",
    "<PAGECONTENT>",
    "<SCREENSHOT>",
    "<SAVEPAGE>",
    "<NOW>",
    "<URIFY>",
    "<JAROWRINKLER>",
    "<BOOLEAN>",
    "<NOT>",
    "<TRUE>",
    "<FALSE>",
    "<LANG>",
    "<NUMBERFUNC>",
    "<SUM>",
    "<FLOOR>",
    "<CEILING>",
    "<ROUND>",
    "\">\"",
    "\"-\"",
    "\"and\"",
    "\"or\"",
    "\"mod\"",
    "\"div\"",
    "\"*\"",
    "\"|\"",
    "\"+\"",
    "\"-\"",
    "\"<=\"",
    "\"<\"",
    "\">=\"",
    "\">\"",
    "\"!=\"",
    "\"=\"",
    "\".\"",
    "\"#\"",
    "\"~=\"",
    "\"#=\"",
    "<WAIT>",
    "<UNTIL>",
    "\"noback\"",
    "\"$\"",
    "\"*\"",
    "<NCNAME>",
    "<NAMESTARTCHAR>",
    "\":\"",
    "<DIGITS>",
    "\"\\\"\"",
    "\"\\\"\"",
    "<token of kind 172>",
    "\"\\\'\"",
    "\"\\\'\"",
    "<token of kind 175>",
  };

}
